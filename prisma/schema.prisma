generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model application {
  id              String          @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name            String          @db.VarChar(255)
  type            String          @db.VarChar(255)
  scope           String          @db.VarChar(255)
  organization_id String?         @db.Uuid
  created_at      DateTime        @default(now()) @db.Timestamp(6)
  updated_at      DateTime        @default(now()) @db.Timestamp(6)
  organization    organization?   @relation(fields: [organization_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  vulnerability   vulnerability[]
}

model bounty {
  id               String         @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  amount           Int
  vulnerability_id String?        @db.Uuid
  created_at       DateTime       @default(now()) @db.Timestamp(6)
  updated_at       DateTime       @default(now()) @db.Timestamp(6)
  vulnerability    vulnerability? @relation(fields: [vulnerability_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model leaderboard {
  id         String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  hacker_id  String?  @db.Uuid
  points     Int
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  user       user?    @relation(fields: [hacker_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model organization {
  id          String        @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  description String?       @db.VarChar(255)
  image       String?       @db.VarChar(255)
  name        String        @db.VarChar(255)
  created_at  DateTime      @default(now()) @db.Timestamp(6)
  updated_at  DateTime      @default(now()) @db.Timestamp(6)
  user_id     String        @db.Uuid
  tenant_id   String        @db.VarChar(255)
  application application[]
  user        user          @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id            String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email         String          @unique @db.VarChar(255)
  firstName     String?         @db.VarChar(255)
  lastName      String?         @db.VarChar(255)
  roq_user_id   String          @db.VarChar(255)
  tenant_id     String          @db.VarChar(255)
  created_at    DateTime        @default(now()) @db.Timestamp(6)
  updated_at    DateTime        @default(now()) @db.Timestamp(6)
  leaderboard   leaderboard[]
  organization  organization[]
  vulnerability vulnerability[]
}

model vulnerability {
  id             String       @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  severity       Int
  description    String       @db.VarChar(255)
  application_id String?      @db.Uuid
  hacker_id      String?      @db.Uuid
  created_at     DateTime     @default(now()) @db.Timestamp(6)
  updated_at     DateTime     @default(now()) @db.Timestamp(6)
  bounty         bounty[]
  application    application? @relation(fields: [application_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user           user?        @relation(fields: [hacker_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
